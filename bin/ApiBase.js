// Generated by CoffeeScript 1.10.0
(function() {
  var debug,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  debug = require('debug')('coding:ApiBase');

  module.exports.ApiBase = (function() {
    function ApiBase(options) {
      this.options = options;
      this.init = bind(this.init, this);
      this.handleOptions = bind(this.handleOptions, this);
      this.handleOptions();
      this.init();
      debug("constructor()");
    }

    ApiBase.prototype.handleOptions = function() {
      var base;
      if ((base = this.options).verbose == null) {
        base.verbose = false;
      }
      return debug("handleOptions()");
    };

    ApiBase.prototype.init = function() {
      this.client = this;
      debug("init()");
      this.oauth = require('./models/OAuth')(this.client);
      this.user = require('./models/Users')(this.client);
      this.project = require('./models/Projects')(this.client);
      this.task = require('./models/Tasks')(this.client);
      this.tweet = require('./models/Tweets')(this.client);
      this.file = require('./models/Files')(this.client);
      this.depot = require('./models/Depots')(this.client);
      this.blob = require('./models/Blobs')(this.client);
      this.branch = require('./models/Branchs')(this.client);
      this.commit = require('./models/Commits')(this.client);
      this.history = require('./models/Historys')(this.client);
      this.repoFile = require('./models/RepoFiles')(this.client);
      this.mergeRequest = require('./models/MergeRequests')(this.client);
      this.pullRequest = require('./models/PullRequests')(this.client);
      this.tag = require('./models/Tags')(this.client);
      this.tree = require('./models/Trees')(this.client);
      this.projectTopic = require('./models/ProjectTopics')(this.client);
      return this.key = require('./models/Keys')(this.client);
    };

    return ApiBase;

  })();

}).call(this);
