// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, ProjectTopics, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  ProjectTopics = (function(superClass) {
    extend(ProjectTopics, superClass);

    function ProjectTopics() {
      return ProjectTopics.__super__.constructor.apply(this, arguments);
    }

    return ProjectTopics;

  })(BaseModel);

  ({

    /*
    
     method			: get
     summary 		: list
     description	: 项目讨论列表
     path			: user,project
     query			: orderBy,page,pageSize
     */
    list: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::list()");
        return _this.get("user/" + user + "/project/" + project + "/topics", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: create
     description	: 创建讨论/发表评论
     path			: user,project
     query			: parent,title,content,label,type
     */
    create: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::create()");
        return _this.post("user/" + user + "/project/" + project + "/topics", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: count
     description	: 所有讨论的个数和我的讨论的个数
     path			: user,project
     */
    count: (function(_this) {
      return function(user, project, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::count()");
        return _this.get("user/" + user + "/project/" + project + "/topics/count", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: getProjectTopicByLabel
     description	: 通过标签获得讨论列表
     path			: user,project,id
     query			: orderBy,page,pageSize
     */
    getProjectTopicByLabel: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::getProjectTopicByLabel()");
        return _this.get("user/" + user + "/project/" + project + "/topics/label/" + id, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: count
     description	: 所有讨论的个数和我的讨论的个数
     path			: user,project
     */
    count: (function(_this) {
      return function(user, project, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::count()");
        return _this.get("user/" + user + "/project/" + project + "/topics/labels/my", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: list
     description	: 我的讨论
     path			: user,project
     query			: orderBy,page,pageSize
     */
    list: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::list()");
        return _this.get("user/" + user + "/project/" + project + "/topics/mine", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: watchedProjectTopicList
     description	: 获取我关注的讨论列表
     path			: user,project
     query			: orderBy,page,pageSize
     */
    watchedProjectTopicList: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::watchedProjectTopicList()");
        return _this.get("user/" + user + "/project/" + project + "/topics/watching", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: detail
     description	: 讨论详情
     path			: user,project,id
     query			: type,toc
     */
    detail: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::detail()");
        return _this.get("user/" + user + "/project/" + project + "/topics/" + id, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: put
     summary 		: update
     description	: 更新讨论
     path			: user,project,id
     query			: topic_id,title,content,label
     */
    update: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::update()");
        return _this.put("user/" + user + "/project/" + project + "/topics/" + id, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: del
     description	: 删除讨论/删除讨论评论
     path			: user,project,id
     */
    del: (function(_this) {
      return function(user, project, id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::del()");
        return _this["delete"]("user/" + user + "/project/" + project + "/topics/" + id, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: comments
     description	: 讨论评论列表
     path			: user,project,id
     query			: page,pageSize,type
     */
    comments: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::comments()");
        return _this.get("user/" + user + "/project/" + project + "/topics/" + id + "/comments", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: addTopicLabel
     description	: 讨论添加标签
     path			: user,project,id,labelId
     */
    addTopicLabel: (function(_this) {
      return function(user, project, id, labelId, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::addTopicLabel()");
        return _this.post("user/" + user + "/project/" + project + "/topics/" + id + "/label/" + labelId, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: deleteTopicLabel
     description	: 删除讨论标签
     path			: user,project,id,labelId
     */
    deleteTopicLabel: (function(_this) {
      return function(user, project, id, labelId, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::deleteTopicLabel()");
        return _this["delete"]("user/" + user + "/project/" + project + "/topics/" + id + "/label/" + labelId, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: operateTopicLabel
     description	: 批量操作讨论标签
     path			: user,project,id
     query			: labelIdStrs
     */
    operateTopicLabel: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::operateTopicLabel()");
        return _this.post("user/" + user + "/project/" + project + "/topics/" + id + "/labels", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: watch
     description	: 关注讨论
     path			: user,project,id
     */
    watch: (function(_this) {
      return function(user, project, id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::watch()");
        return _this.post("user/" + user + "/project/" + project + "/topics/" + id + "/watch", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: watchers
     description	: 获取关注该讨论的用户
     path			: user,project,id
     query			: page,pageSize
     */
    watchers: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("ProjectTopics::watchers()");
        return _this.get("user/" + user + "/project/" + project + "/topics/" + id + "/watchers", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this)
  });

  module.exports = function(client) {
    return new ProjectTopics(client);
  };

}).call(this);
