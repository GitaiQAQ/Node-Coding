// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Tweets, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  Tweets = (function(superClass) {
    extend(Tweets, superClass);

    function Tweets() {
      return Tweets.__super__.constructor.apply(this, arguments);
    }

    return Tweets;

  })(BaseModel);

  ({

    /*
    
     method			: post
     summary 		: create
     description	: 发送冒泡
     query			: device,location,coord,address,content
     */
    create: (function(_this) {
      return function(params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::create()");
        return _this.post("social/tweet", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: bestUser
     description	: 热门用户
     */
    bestUser: (function(_this) {
      return function(fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::bestUser()");
        return _this.get("social/tweet/best_user", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: comment
     description	: 获取某个评论
     path			: id
     */
    comment: (function(_this) {
      return function(id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::comment()");
        return _this.get("social/tweet/comment/" + id, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: image
     description	: 冒泡插入图片
     */
    image: (function(_this) {
      return function(fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::image()");
        return _this.post("social/tweet/insert_image", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: lastTweetList
     description	: 查询last_id以后的最新冒泡
     query			: default_like_count,last_id
     */
    lastTweetList: (function(_this) {
      return function(params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::lastTweetList()");
        return _this.get("social/tweet/last", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: list
     description	: 冒泡列表
     query			: sort,last_id,default_like_count,filter
     */
    list: (function(_this) {
      return function(params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::list()");
        return _this.get("social/tweet/public_tweets", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: userPublic
     description	: 用户冒泡列表
     query			: last_id,user_id,user,type,default_like_count
     */
    userPublic: (function(_this) {
      return function(params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::userPublic()");
        return _this.get("social/tweet/user_public", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: detail
     description	: 获取冒泡详情
     path			: user,tweet_id
     query			: default_like_count
     */
    detail: (function(_this) {
      return function(user, tweet_id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::detail()");
        return _this.get("social/tweet/" + user + "/" + tweet_id, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: comment
     description	: 冒泡评论
     path			: id
     query			: content,afterFilter
     */
    comment: (function(_this) {
      return function(id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::comment()");
        return _this.post("social/tweet/" + id + "/comment", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: comment
     description	: 删除冒泡评论
     path			: id,comment_id
     */
    comment: (function(_this) {
      return function(id, comment_id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::comment()");
        return _this["delete"]("social/tweet/" + id + "/comment/" + comment_id, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: comment
     description	: 获取冒泡评论列表
     path			: id
     query			: page,pageSize
     */
    comment: (function(_this) {
      return function(id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::comment()");
        return _this.get("social/tweet/" + id + "/comments", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: del
     description	: 删除冒泡
     path			: tweet_id
     */
    del: (function(_this) {
      return function(tweet_id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::del()");
        return _this["delete"]("social/tweet/" + tweet_id, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: like
     description	: 冒泡点赞
     path			: tweet_id
     */
    like: (function(_this) {
      return function(tweet_id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::like()");
        return _this.post("social/tweet/" + tweet_id + "/like", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: likeTweetList
     description	: 赞过的冒泡列表
     path			: tweet_id
     query			: page,pageSize
     */
    likeTweetList: (function(_this) {
      return function(tweet_id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::likeTweetList()");
        return _this.get("social/tweet/" + tweet_id + "/tweetlike", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: unlike
     description	: 冒泡取消点赞
     path			: tweet_id
     */
    unlike: (function(_this) {
      return function(tweet_id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::unlike()");
        return _this.post("social/tweet/" + tweet_id + "/unlike", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: publicTweets
     description	: 冒泡广场列表
     query			: sort,last_id,default_like_count,filter
     */
    publicTweets: (function(_this) {
      return function(params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tweets::publicTweets()");
        return _this.get("tweet/public_tweets", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this)
  });

  module.exports = function(client) {
    return new Tweets(client);
  };

}).call(this);
