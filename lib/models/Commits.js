// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Commits, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  Commits = (function(superClass) {
    extend(Commits, superClass);

    function Commits() {
      return Commits.__super__.constructor.apply(this, arguments);
    }

    return Commits;

  })(BaseModel);

  ({

    /*
    
     method			: get
     summary 		: show
     description	: commit 列表
     header 		: userAgent,accept
     path			: user,project,commit
     query			: diff,w
     body			: currentApp,ref
     */
    show: (function(_this) {
      return function(user, project, commit, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Commits::show()");
        return _this.get("user/" + user + "/project/" + project + "/git/commit/" + commit, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this)
  });

  module.exports = function(client) {
    return new Commits(client);
  };

}).call(this);
