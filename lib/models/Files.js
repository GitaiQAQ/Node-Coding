// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Files, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  Files = (function(superClass) {
    extend(Files, superClass);

    function Files() {
      return Files.__super__.constructor.apply(this, arguments);
    }

    return Files;

  })(BaseModel);

  ({

    /*
    
     method			: get
     summary 		: checkExisted
     description	: 检查目录下是否有同名的文件
     path			: user,project,dir
     body			: names
     */
    checkExisted: (function(_this) {
      return function(user, project, dir, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::checkExisted()");
        return _this.get("user/" + user + "/project/" + project + "/dir/" + dir + "/files/existed", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: uploadNewVersion
     description	: 上传文件新版本
     path			: user,project
     */
    uploadNewVersion: (function(_this) {
      return function(user, project, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::uploadNewVersion()");
        return _this.post("user/" + user + "/project/" + project + "/file/history/upload", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: view
     description	: 删除文件
     path			: user,project
     body			: fileIds
     */
    view: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::view()");
        return _this["delete"]("user/" + user + "/project/" + project + "/files", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: history
     description	: 删除文件历史
     path			: user,project,id
     */
    history: (function(_this) {
      return function(user, project, id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::history()");
        return _this["delete"]("user/" + user + "/project/" + project + "/files/histories/" + id, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: download
     description	: 下载历史文件版本
     path			: user,project,id
     */
    download: (function(_this) {
      return function(user, project, id, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::download()");
        return _this.get("user/" + user + "/project/" + project + "/files/histories/" + id + "/download", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: upload
     description	: 上传私有项目的图片
     path			: user,project
     */
    upload: (function(_this) {
      return function(user, project, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::upload()");
        return _this.post("user/" + user + "/project/" + project + "/files/upload", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: download
     description	: 文件下载
     path			: user,project,fileId
     */
    download: (function(_this) {
      return function(user, project, fileId, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::download()");
        return _this.get("user/" + user + "/project/" + project + "/files/" + fileId + "/download", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: download
     description	: 文件下载URL
     path			: user,project,fileId
     */
    download: (function(_this) {
      return function(user, project, fileId, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::download()");
        return _this.get("user/" + user + "/project/" + project + "/files/" + fileId + "/download/url", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: edit
     description	: 编辑文件
     path			: user,project,fileId
     query			: name,content,fileId
     */
    edit: (function(_this) {
      return function(user, project, fileId, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::edit()");
        return _this.post("user/" + user + "/project/" + project + "/files/" + fileId + "/edit", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: view
     description	: 查看文件
     path			: user,project,fileId
     query			: type,width,height,flag
     */
    view: (function(_this) {
      return function(user, project, fileId, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::view()");
        return _this.get("user/" + user + "/project/" + project + "/files/" + fileId + "/view", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: preview
     description	: 图片预览
     path			: user,project,fileId
     query			: type,width,height
     */
    preview: (function(_this) {
      return function(user, project, fileId, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::preview()");
        return _this.get("user/" + user + "/project/" + project + "/files/" + fileId + "/view/image", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: updateFileRemark
     description	: 修改历史版本备注
     path			: user,project,file_id,history_id
     query			: remark
     */
    updateFileRemark: (function(_this) {
      return function(user, project, file_id, history_id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::updateFileRemark()");
        return _this.post("user/" + user + "/project/" + project + "/files/" + file_id + "/histories/" + history_id + "/remark", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: create
     description	: 创建文件
     path			: user,project,folderId
     query			: projectFile.deleted_at,projectFile.projects_id,projectFile.files_id,projectFile.comments,projectFile.id,folder.owner_id,folder.parent_id,folder.created_at,folder.updated_at,folder.type,folder.size,folder.name,folder.storage_type,folder.storage_key,folder.history_id,folder.id,name,content,folderId
     */
    create: (function(_this) {
      return function(user, project, folderId, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::create()");
        return _this.post("user/" + user + "/project/" + project + "/files/" + folderId + "/files", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: history
     description	: 文件历史
     path			: user,project,id
     query			: type,width,height
     */
    history: (function(_this) {
      return function(user, project, id, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::history()");
        return _this.get("user/" + user + "/project/" + project + "/files/" + id + "/histories", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: mkdir
     description	: 创建文件夹
     path			: user,project
     query			: name,parentId
     */
    mkdir: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::mkdir()");
        return _this.post("user/" + user + "/project/" + project + "/folder", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: delete
     summary 		: mkdir
     description	: 删除文件夹
     path			: user,project
     */
    mkdir: (function(_this) {
      return function(user, project, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::mkdir()");
        return _this["delete"]("user/" + user + "/project/" + project + "/folder", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: put
     summary 		: move
     description	: 移动文件
     path			: user,project,dirId
     query			: fileId
     */
    move: (function(_this) {
      return function(user, project, dirId, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::move()");
        return _this.put("user/" + user + "/project/" + project + "/folder/" + dirId + "/move", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: put
     summary 		: renameFolder
     description	: 重命名文件夹
     path			: user,project,dir
     query			: name
     */
    renameFolder: (function(_this) {
      return function(user, project, dir, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::renameFolder()");
        return _this.put("user/" + user + "/project/" + project + "/folder/" + dir, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: files
     description	: 列出某目录下的文件
     path			: user,project,dir
     query			: type,width,height,page,pageSize
     */
    files: (function(_this) {
      return function(user, project, dir, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::files()");
        return _this.get("user/" + user + "/project/" + project + "/folder/" + dir + "/files", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: folders
     description	: 列出所有一级目录
     path			: user,project
     query			: page,pageSize
     */
    folders: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::folders()");
        return _this.get("user/" + user + "/project/" + project + "/folders", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: folders
     description	: 列出所有目录
     path			: user,project
     query			: page,pageSize
     */
    folders: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::folders()");
        return _this.get("user/" + user + "/project/" + project + "/folders/all", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: count
     description	: 获取文件夹的文件数
     path			: user,project
     */
    count: (function(_this) {
      return function(user, project, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("Files::count()");
        return _this.get("user/" + user + "/project/" + project + "/folders/file_count/all", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this)
  });

  module.exports = function(client) {
    return new Files(client);
  };

}).call(this);
