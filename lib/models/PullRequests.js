// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, PullRequests, util,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  PullRequests = (function(superClass) {
    extend(PullRequests, superClass);

    function PullRequests() {
      this.list = bind(this.list, this);
      this.refuse = bind(this.refuse, this);
      this.merge = bind(this.merge, this);
      this.commits = bind(this.commits, this);
      this.comments = bind(this.comments, this);
      this.cancle = bind(this.cancle, this);
      this.get = bind(this.get, this);
      this.create = bind(this.create, this);
      return PullRequests.__super__.constructor.apply(this, arguments);
    }


    /*
    
     method            : get
     summary         : create
     description    : 创建 PullRequest
     path            : user,project
     query            : src_branch,des_user_name,des_project_name,des_branch,diff
     */

    PullRequests.prototype.create = function(user, project, params, fn) {
      if (params == null) {
        params = {};
      }
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::create()");
      return this.get("/api/user/" + user + "/project/" + project + "/git/pull/create", params, function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : get
     summary         : get
     description    : 获取某个 PullRequest
     path            : user,project,iid
     query            : diff
     */

    PullRequests.prototype.get = function(user, project, iid, params, fn) {
      if (params == null) {
        params = {};
      }
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::get()");
      return this.get("/api/user/" + user + "/project/" + project + "/git/pull/" + iid, params, function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : post
     summary         : cancle
     description    : 取消 PullRequest
     path            : user,project,iid
     */

    PullRequests.prototype.cancle = function(user, project, iid, fn) {
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::cancle()");
      return this.post("/api/user/" + user + "/project/" + project + "/git/pull/" + iid + "/cancel", function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : get
     summary         : comments
     description    : PullRequest 评论列表
     path            : user,project,iid
     */

    PullRequests.prototype.comments = function(user, project, iid, fn) {
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::comments()");
      return this.get("/api/user/" + user + "/project/" + project + "/git/pull/" + iid + "/comments", function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : get
     summary         : commits
     description    : 获取某个 PullRequest 的评论
     path            : user,project,iid
     */

    PullRequests.prototype.commits = function(user, project, iid, fn) {
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::commits()");
      return this.get("/api/user/" + user + "/project/" + project + "/git/pull/" + iid + "/commits", function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : post
     summary         : merge
     description    : 合并 PullRequest
     path            : user,project,iid
     query            : message
     */

    PullRequests.prototype.merge = function(user, project, iid, params, fn) {
      if (params == null) {
        params = {};
      }
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::merge()");
      return this.post("/api/user/" + user + "/project/" + project + "/git/pull/" + iid + "/merge", params, function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : post
     summary         : refuse
     description    : 拒绝 PullRequest
     path            : user,project,iid
     */

    PullRequests.prototype.refuse = function(user, project, iid, fn) {
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::refuse()");
      return this.post("/api/user/" + user + "/project/" + project + "/git/pull/" + iid + "/refuse", function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };


    /*
    
     method            : get
     summary         : list
     description    : PullRequest 列表
     path            : user,project,status
     query            : page,pageSize
     */

    PullRequests.prototype.list = function(user, project, status, params, fn) {
      if (params == null) {
        params = {};
      }
      if (fn == null) {
        fn = null;
      }
      this.debug("PullRequests::list()");
      return this.get("/api/user/" + user + "/project/" + project + "/git/pulls/" + status, params, function(data) {
        if (fn) {
          return fn(data);
        }
      });
    };

    return PullRequests;

  })(BaseModel);

  module.exports = function(client) {
    return new PullRequests(client);
  };

}).call(this);
