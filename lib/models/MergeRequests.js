// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, MergeRequests, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  MergeRequests = (function(superClass) {
    extend(MergeRequests, superClass);

    function MergeRequests() {
      return MergeRequests.__super__.constructor.apply(this, arguments);
    }

    return MergeRequests;

  })(BaseModel);

  ({

    /*
    
     method			: post
     summary 		: create
     description	: 创建 MergeRequest
     path			: user,project
     query			: srcBranch,desBranch,title,content,reviewers,tasks
     */
    create: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::create()");
        return _this.post("user/" + user + "/project/" + project + "/git/merge", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: get
     description	: 显示某个 MergeRequest
     path			: user,project,iid
     query			: diff
     */
    get: (function(_this) {
      return function(user, project, iid, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::get()");
        return _this.get("user/" + user + "/project/" + project + "/git/merge/" + iid, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: put
     summary 		: update
     description	: 更新某个 MergeRequest
     path			: user,project,iid
     query			: srcBranch,desBranch,title,content,reviewers,tasks
     */
    update: (function(_this) {
      return function(user, project, iid, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::update()");
        return _this.put("user/" + user + "/project/" + project + "/git/merge/" + iid, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: cancel
     description	: 取消 MergeRequest
     path			: user,project,iid
     */
    cancel: (function(_this) {
      return function(user, project, iid, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::cancel()");
        return _this.post("user/" + user + "/project/" + project + "/git/merge/" + iid + "/cancel", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: merge
     description	: 合并某个 MergeRequest
     path			: user,project,iid
     query			: message,del_source_branch
     */
    merge: (function(_this) {
      return function(user, project, iid, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::merge()");
        return _this.post("user/" + user + "/project/" + project + "/git/merge/" + iid + "/merge", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: refuse
     description	: 拒绝某个 MergeRequest
     path			: user,project,iid
     */
    refuse: (function(_this) {
      return function(user, project, iid, fn) {
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::refuse()");
        return _this.post("user/" + user + "/project/" + project + "/git/merge/" + iid + "/refuse", function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: get
     summary 		: list
     description	: MergeRequest 列表
     path			: user,project,status
     query			: page,pageSize
     */
    list: (function(_this) {
      return function(user, project, status, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("MergeRequests::list()");
        return _this.get("user/" + user + "/project/" + project + "/git/merges/" + status, params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this)
  });

  module.exports = function(client) {
    return new MergeRequests(client);
  };

}).call(this);
