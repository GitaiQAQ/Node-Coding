// Generated by CoffeeScript 1.10.0
(function() {
  var BaseModel, Tags, util,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  BaseModel = require('../BaseModel');

  util = require('util');

  Tags = (function(superClass) {
    extend(Tags, superClass);

    function Tags() {
      return Tags.__super__.constructor.apply(this, arguments);
    }

    return Tags;

  })(BaseModel);

  ({

    /*
    
     method			: get
     summary 		: list
     description	: 标签列表
     path			: user,project
     query			: page,pageSize
     */
    list: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tags::list()");
        return _this.get("user/" + user + "/project/" + project + "/git/tags", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: create
     description	: 创建标签
     path			: user,project
     query			: tag_name,tag_point,message
     */
    create: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tags::create()");
        return _this.post("user/" + user + "/project/" + project + "/git/tags/create", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this),

    /*
    
     method			: post
     summary 		: del
     description	: 删除标签
     path			: user,project
     query			: tag_name
     */
    del: (function(_this) {
      return function(user, project, params, fn) {
        if (params == null) {
          params = {};
        }
        if (fn == null) {
          fn = null;
        }
        _this.debug("Tags::del()");
        return _this.post("user/" + user + "/project/" + project + "/git/tags/delete", params, function(data) {
          if (fn) {
            return fn(data);
          }
        });
      };
    })(this)
  });

  module.exports = function(client) {
    return new Tags(client);
  };

}).call(this);
